name: Pull request
on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  lint:
    name: Lint content
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0 # Enable gitlint to check all PR commit messages

      - uses: cachix/install-nix-action@v18

      - uses: cachix/cachix-action@v12
        with:
          name: linz
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Cache pre-commit
        uses: actions/cache@v3.2.3
        with:
          path: ~/.cache/pre-commit
          key:
            ${{ secrets.CACHE_SEED }}-${{ hashFiles('.pre-commit-config.yaml')
            }}

      - name: Run pre-commit hooks
        run: nix-shell --pure --run 'pre-commit run --all-files'

      - name: Check all commit messages in Pull Request
        run:
          nix-shell --pure --run 'gitlint --commits origin/${{ github.base_ref
          }}..${{ github.event.pull_request.head.sha }}'

  test-nix:
    name: Test using Nix
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3.3.0

      - uses: cachix/install-nix-action@v18

      - uses: cachix/cachix-action@v12
        with:
          name: linz
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Run test
        run:
          nix-shell --pure --run 'jupyter nbconvert --debug --execute --inplace
          --to=notebook Sentinel2_Water_Extraction.ipynb'
        working-directory: flooding/Sentinel2_Water_Extraction

  test-poetry:
    name: Test using Poetry on Python ${{ matrix.python }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
    steps:
      - name: Check out repository
        uses: actions/checkout@v3.3.0

      - name: Use Python ${{ matrix.python }}
        uses: actions/setup-python@v4.5.0
        with:
          python-version: ${{ matrix.python }}

      - name: Cache pip
        uses: actions/cache@v3.2.3
        with:
          path: ~/.cache/pip
          key:
            ${{ runner.os }}-pip-${{ secrets.CACHE_SEED }}-${{ matrix.python
            }}-${{
            hashFiles('./flooding/Sentinel2_Water_Extraction/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ secrets.CACHE_SEED }}-${{ matrix.python }}-

      - name: Update package registry
        run: sudo apt-get update

      - name: Install GDAL
        run: sudo apt-get --assume-yes install libgdal-dev

      - name: Upgrade pip
        run: pip install --disable-pip-version-check --upgrade pip

      - name: Install Poetry
        run: pip install --disable-pip-version-check poetry

      - name: Install Python packages
        run: poetry install --only=main --no-root
        working-directory: flooding/Sentinel2_Water_Extraction

      - name: Run test
        run:
          poetry run jupyter nbconvert --debug --execute --inplace --to=notebook
          Sentinel2_Water_Extraction.ipynb
        working-directory: flooding/Sentinel2_Water_Extraction

  finalise:
    if: always()
    needs:
      - lint
      - test-nix
      - test-poetry
    runs-on: ubuntu-22.04
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
